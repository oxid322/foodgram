version: '3.3'
volumes:
  pg_data:
  static:
services:
  db:
    container_name: foodgram-db
    image: postgres:13.10
    env_file: ../.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U django_user -d django" ]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    container_name: foodgram-back
    build: ../backend
    env_file: ../.env
    entrypoint: /app/entrypoint.sh
    volumes:
      - ../backend/media:/app/media
      - static:/backend_static
    depends_on:
      db:
        condition: service_healthy
  frontend:
    container_name: foodgram-front
    build: ../frontend
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../docs/:/usr/share/nginx/html/api/docs/
      - ../backend/media/:/usr/share/nginx/html/media
      - static:/staticfiles
    depends_on:
      backend:
        condition: service_started
